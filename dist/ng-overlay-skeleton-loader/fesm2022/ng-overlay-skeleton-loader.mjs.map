{"version":3,"file":"ng-overlay-skeleton-loader.mjs","sources":["../../../projects/ng-overlay-skeleton-loader/src/lib/component/ng-overlay-skeleton-loader.component.ts","../../../projects/ng-overlay-skeleton-loader/src/lib/directive/ng-overlay-skeleton-loader.directive.ts","../../../projects/ng-overlay-skeleton-loader/src/public-api.ts","../../../projects/ng-overlay-skeleton-loader/src/ng-overlay-skeleton-loader.ts"],"sourcesContent":["import { Component, ElementRef, Input } from '@angular/core';\n\n@Component({\n  selector: 'ng-overlay-skeleton-loader',\n  template: ``,\n  styles: [\n    `\n      :host {\n        background: rgb(239, 241, 246) no-repeat;\n        display: block;\n        position: relative;\n      }\n      :host::before {\n        content: '';\n        animation: skeleton-animation 1.2s infinite;\n        height: 100%;\n        left: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        transform: translateX(-100%);\n        z-index: 1;\n        background: linear-gradient(\n          90deg,\n          rgba(255, 255, 255, 0),\n          rgba(255, 255, 255, 0.4),\n          rgba(255, 255, 255, 0)\n        );\n      }\n      @keyframes skeleton-animation {\n        0% {\n          transform: translateX(-100%);\n        }\n        100% {\n          transform: translateX(100%);\n        }\n      }\n    `,\n  ],\n})\nexport class SkeltonLoadingComponent {\n  @Input() width?: string;\n  @Input() height?: string;\n  @Input() className?: string;\n  @Input() isOverlay = false;\n  @Input() borderRadius: string = '10px'; // ✅ new input\n\n  constructor(private host: ElementRef<HTMLElement>) {}\n\n  ngOnInit() {\n    const host = this.host.nativeElement;\n\n    if (this.className) {\n      host.classList.add(this.className);\n    }\n\n    Object.assign(host.style, {\n      width: this.width ?? '100%',\n      height: this.height ?? '20px',\n      borderRadius: this.borderRadius, // ✅ apply border radius\n    });\n\n    if (this.isOverlay) {\n      Object.assign(host.style, {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        zIndex: '1',\n      });\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n  OnChanges,\n  Renderer2,\n  ElementRef,\n} from '@angular/core';\nimport { SkeltonLoadingComponent } from '../component/ng-overlay-skeleton-loader.component';\n\n@Directive({ selector: '[skeleton]' })\nexport class SkeletonLoadingDirective implements OnChanges {\n  @Input('skeleton') isLoading = false;\n  @Input('skeletonRepeat') size = 1;\n  @Input('skeletonIsOverlay') isOverlay = true;\n  @Input('skeletonWidth') width?: string;\n  @Input('skeletonHeight') height?: string;\n  @Input('skeletonClassName') className?: string;\n  @Input('skeletonBorderRadius') borderRadius?: string; // ✅ new input\n\n  private wrapperDiv?: HTMLElement;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private renderer: Renderer2,\n    private vcr: ViewContainerRef,\n    private host: ElementRef<HTMLElement>\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.vcr.clear();\n    const hostEl = this.host.nativeElement;\n\n    if (this.wrapperDiv) {\n      this.renderer.insertBefore(this.wrapperDiv.parentNode, hostEl, this.wrapperDiv);\n      this.renderer.removeChild(this.wrapperDiv.parentNode, this.wrapperDiv);\n      this.wrapperDiv = undefined;\n    }\n\n    this.vcr.clear();\n\n    if (this.isLoading && this.isOverlay) {\n      const wrapper = this.renderer.createElement('div');\n      this.renderer.setStyle(wrapper, 'position', 'relative');\n      this.renderer.setStyle(wrapper, 'overflow', 'hidden');\n      if (this.height) this.renderer.setStyle(wrapper, 'height', this.height);\n\n      const parent = hostEl.parentNode;\n      this.renderer.insertBefore(parent, wrapper, hostEl);\n      this.renderer.removeChild(parent, hostEl);\n\n      for (let i = 0; i < this.size; i++) {\n        const ref = this.vcr.createComponent(SkeltonLoadingComponent);\n        Object.assign(ref.instance, {\n          width: this.width,\n          height: this.height,\n          className: this.className,\n          isOverlay: true,\n          borderRadius: this.borderRadius ?? '10px', // ✅ pass border radius\n        });\n        this.renderer.appendChild(wrapper, ref.location.nativeElement);\n      }\n    } else if (this.isLoading && !this.isOverlay) {\n      for (let i = 0; i < this.size; i++) {\n        const ref = this.vcr.createComponent(SkeltonLoadingComponent);\n        Object.assign(ref.instance, {\n          width: this.width,\n          height: this.height,\n          className: this.className,\n          isOverlay: false,\n          borderRadius: this.borderRadius ?? '10px', // ✅ pass border radius\n        });\n        this.renderer.appendChild(hostEl, ref.location.nativeElement);\n      }\n    } else {\n      this.vcr.createEmbeddedView(this.tpl);\n    }\n  }\n}\n","/*\n * Public API Surface of ng-overlay-skeleton-loader\n */\n\nexport * from './lib/component/ng-overlay-skeleton-loader.component';\nexport * from './lib/directive/ng-overlay-skeleton-loader.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}